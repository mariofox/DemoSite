# These settings override and append settings in:

# common-shared.properties

# Please see common-shared.properties for more information on how the properties files work
    
# Allows us to load demo images from the classpath.   This would be an expensive approach
# for most implementations and should only be done in dev.   Images should be on a 
# shared file system or the DB when in non-development environments
asset.server.file.classpath.directory=/cms/static

# Because we are blanking the value out here, broadleaf will use System.setProperty("java.io.tmpdir")
# This would NOT make sense in non-development environments since the OS may delete files in that
# directory.
# 
# In non-development environments, this defaults to "/broadleaf/assets".
asset.server.file.system.path=

# ############################################# #
# EMAILS - Settings for system generated emails #
# ############################################# #

customerService.fromAddress="jmesab@sura.com.co";

# Forgot Password Email
customerForgotPasswordEmail.emailTemplate=/emailTemplates/forgotPassword.html
customerForgotPasswordEmail.subject=Forgot Password Request - Heat Clinic

# ####################################### #
# ANALYTICS - Google Analytics Properties #
# ####################################### #
# Override to set your googleAnalytics Id.
# Sites may want to setup IDs for QA and production
googleAnalytics.webPropertyId=UA-XXXXXXX-X

#Used in _addTrans to specify the site that the transaction is for. Could be used in a multi-site scenario
#where multiple sites feed into the same Google Analytics account and you want to keep track of where the
#transactions actually come from
googleAnalytics.affiliation=

# ############################################ #
# CONTENT MANAGEMENT - Asset Server Properties #
# ############################################ #

# Prefix used to indicate the url represents an asset being managed by the CMS.
asset.server.url.prefix.internal=cmsstatic
# When serving custom Pages or Structured Content fields, the url prefix defined
# above will be replaced with the string below.   This is useful for sites
# that have a separate image domain or use a CDN to render images.   This works well
# with CMS's that own the image part of your domain CNAME
#asset.server.url.prefix=http://localhost:8080/cmsstatic
asset.server.url.prefix=

# If left blank, the system will use the non secure url and replace the http with
# https.
asset.server.url.prefix.secure=

# prefix in front of all urls that hit your storefront from the admin. This is useful
# when the storefront is located on a different server from the admin (e.g. http://storefront:8080/)
store.front.webapp.prefix=http://localhost:8080/

                                    
blPU.hibernate.hbm2ddl.import_files=/config/bc/sql/load_admin_permissions.sql,\
                                    /config/bc/sql/load_admin_roles.sql,\
                                    /config/bc/sql/load_admin_menu.sql,\
                                    /sql/load_admin_users.sql,\
                                    /sql/load_code_tables.sql,\
                                    /sql/load_table_sequences.sql,\
                                    /sql/load_content_structure.sql,\
                                    /sql/load_catalog_data.sql,\
                                    /sql/load_catalog_pricesplit_data.sql,\
                                    /sql/load_content_data.sql,\
                                    /sql/load_content_structure_i18n.sql,\
                                    /sql/load_content_data_i18n.sql,\
                                    /sql/load_catalog_i18n_data_FR.sql,\
                                    /sql/load_catalog_i18n_data_ES.sql
                                    
                                    
# ##################################### #
# DATABASE - Database Server Properties #
# ##################################### #

# Settings for the default persistence unit
blPU.hibernate.hbm2ddl.auto=validate
blPU.hibernate.dialect=org.hibernate.dialect.HSQLDialect
blPU.hibernate.show_sql=false
blPU.hibernate.cache.use_second_level_cache=true
blPU.hibernate.cache.use_query_cache=true
blPU.hibernate.hbm2ddl.import_files=null
# Settings for the CMS storage persistence unit
blCMSStorage.hibernate.hbm2ddl.auto=validate
blCMSStorage.hibernate.dialect=org.hibernate.dialect.HSQLDialect
blCMSStorage.hibernate.show_sql=false
blCMSStorage.hibernate.cache.use_second_level_cache=true
blCMSStorage.hibernate.cache.use_query_cache=true
blCMSStorage.hibernate.hbm2ddl.import_files=null
# Settings for the secure persistence unit
blSecurePU.hibernate.hbm2ddl.auto=validate
blSecurePU.hibernate.dialect=org.hibernate.dialect.HSQLDialect
blSecurePU.hibernate.show_sql=false
blSecurePU.hibernate.cache.use_second_level_cache=false
blSecurePU.hibernate.cache.use_query_cache=false
blSecurePU.hibernate.hbm2ddl.import_files=null

auto.correct.sequence.generator.inconsistencies=true

blPU.hibernate.hbm2ddl.auto=create-drop
blCMSStorage.hibernate.hbm2ddl.auto=update
blSecurePU.hibernate.hbm2ddl.auto=update

# Cache page templates for just 2 seconds in development (allows for caching during a single request)
cache.page.templates.ttl=2000
messages.cacheSeconds=2
cache.entity.dao.metadata.ttl=2000
thymeleaf.view.resolver.cache=false

bundle.enabled=false
minify.enabled=false